Index: src/backend/database/database.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from mongoengine import *\r\nimport bcrypt\r\nimport re\r\nimport json\r\n\r\nconnect(\r\n    host=\"mongodb+srv://jluolbro:kennaHbrWlKSXBKH@cluster0.zbpmsb3.mongodb.net/?retryWrites=true&w=majority\",\r\n    db=\"Students\"\r\n)\r\n\r\n\r\nclass User(Document):\r\n    first_name = StringField(required=True)\r\n    last_name = StringField(required=True)\r\n    user_pass = StringField(required=True)\r\n    school_id = StringField(required=True)\r\n    email = StringField(required=True)\r\n    is_teacher = BooleanField(required=True, default=False)\r\n    fields_id = ListField()\r\n\r\n\r\nclass FieldsOfStudy(Document):\r\n    _id = IntField(required=True, primary_key=True)\r\n    name = StringField(required=True)\r\n\r\n\r\ndef create_user(first_name, last_name, user_pass, school_id, email, is_teacher):\r\n    created_user = User(\r\n        first_name=first_name,\r\n        last_name=last_name,\r\n        user_pass=bcrypt.hashpw(user_pass.encode('utf-8'), bcrypt.gensalt()),\r\n        school_id=school_id,\r\n        email=email,\r\n        is_teacher=is_teacher\r\n    )\r\n\r\n    if not re.match(r'^\\d{9}$', school_id):\r\n        raise Exception(\"Invalid ID\")\r\n    if \"@uncg.edu\" not in email:\r\n        raise Exception(\"Invalid school email\")\r\n    if get_user_by_school_id(school_id).count() > 0:\r\n        raise Exception(\"User already exist (Check ID)\")\r\n    if get_user_by_email(email).count() > 0:\r\n        raise Exception(\"User already exist (Check Email)\")\r\n    else:\r\n        created_user.save()\r\n\r\n\r\ndef create_student(first_name, last_name, user_pass, school_id, email):\r\n    create_user(first_name, last_name, user_pass, school_id, email, False)\r\n\r\n\r\ndef create_teacher(first_name, last_name, user_pass, school_id, email):\r\n    create_user(first_name, last_name, user_pass, school_id, email, True)\r\n\r\n\r\n# Remind front end team to not leave an option available to sign up as an administrator\r\n# def create_admin(first_name, last_name, user_pass, school_id, email, is_teacher):\r\n#     create_user(first_name, last_name, user_pass, school_id, email, is_teacher, True)\r\n\r\n\r\ndef get_all_users():\r\n    return User.objects()\r\n\r\n\r\ndef get_user_by_first_name(name):\r\n    q_set = User.objects(first_name=name)\r\n    return q_set\r\n\r\n\r\ndef get_user_by_last_name(lastname):\r\n    q_set = User.objects(last_name=lastname)\r\n    return q_set\r\n\r\n# Takes first part of email to query the database.\r\n\r\n\r\ndef get_user_by_email_no_domain(email):\r\n    email_to_query = email + \"@\"\r\n    q_set = User.objects(email__startswith=email_to_query)\r\n    return q_set\r\n\r\n\r\ndef get_user_by_email(email):\r\n    q_set = User.objects(email__startswith=email)\r\n    return q_set\r\n\r\n\r\ndef get_user_by_school_id(school_id):\r\n    q_set = User.objects(school_id=school_id)\r\n    return q_set\r\n\r\n\r\ndef change_password(email, new_password):\r\n    users = get_user_by_email(email)\r\n    if users.count() == 1:\r\n        temp = str(bcrypt.hashpw(new_password.encode('utf-8'), bcrypt.gensalt()), 'utf-8')\r\n        users[0].update(user_pass=temp)\r\n    else:\r\n        raise Exception(\"No unique user found\")\r\n\r\n\r\ndef compare_password(email, user_pass):\r\n    users = get_user_by_email(email)\r\n    if users.count() == 1:\r\n        return bcrypt.checkpw(user_pass.encode('utf-8'), users[0].user_pass.encode('utf-8'))\r\n    else:\r\n        raise Exception(\"No unique user found\")\r\n\r\n\r\ndef create_field_of_study(id, name):\r\n    created_field = FieldsOfStudy(\r\n        _id=id,\r\n        name=name\r\n    )\r\n    created_field.save()\r\n\r\n\r\ndef get_all_fields_of_study():\r\n    return FieldsOfStudy.objects()\r\n\r\n\r\ndef update_user_fields_of_study(student_id, fos_id):\r\n    users = get_user_by_school_id(student_id)\r\n    if users.count() == 1:\r\n        if len(users[0].fields_id) < 4 and fos_id not in users[0].fields_id:\r\n            users.update_one(push__fields_id=fos_id)\r\n        else:\r\n            raise Exception(\"Too many fields or already existing\")\r\n    else:\r\n        raise Exception(\"No unique user found\")\r\n\r\n\r\n# def get_user_fields_of_study(school_id):\r\n#     q_set = User.objects(school_id=school_id)\r\n#     if q_set.count() == 1:\r\n#         temp_q = q_set.only('school_id', 'fields_id').exclude('id')\r\n#         return temp_q\r\n#     else:\r\n#         raise Exception(\"User not found\")\r\n\r\ndef get_user_fields_of_study(school_id):\r\n    users = User.objects(school_id=school_id).aggregate(*[\r\n        {\r\n            '$lookup': {\r\n                'from': FieldsOfStudy._get_collection_name(),\r\n                'localField': 'fields_id',\r\n                'foreignField': '_id',\r\n                'as': 'Field_of_Study'}\r\n        }])\r\n    result_list = list(users)\r\n    fos = []\r\n    for FOS in result_list[0]['Field_of_Study']:\r\n        fos.append(FOS['name'])\r\n    temp_dict = {\r\n        \"school_id\": result_list[0][\"school_id\"],\r\n        \"Field_of_Study\": fos\r\n    }\r\n    return print(json.dumps(temp_dict))\r\n\r\n#[{'_id': ObjectId('6416226b7ca58f762a323722'), 'first_name': 'Luke', 'last_name': 'Brown',\r\n# 'user_pass': '$2b$12$vawrnNJxkJI5UoJMVhS3LOmEYE57lFg6YKgdO7A0157tj08tcYy1i', 'school_id': '888319834',\r\n# 'email': 'lcbrown9@uncg.edu', 'is_teacher': False, 'fields_id': [0, 5],\r\n# 'Field_of_Study': [{'_id': 0, 'name': 'Algorithms and Theory of Computing'}, {'_id': 5, 'name': 'Networking'}]}]\r\n\r\n\r\ndef get_teachers_fields_of_study():\r\n    users = User.objects(is_teacher=True).aggregate(*[\r\n        {\r\n            '$lookup': {\r\n                'from': FieldsOfStudy._get_collection_name(),\r\n                'localField': 'fields_id',\r\n                'foreignField': '_id',\r\n                'as': 'Field_of_Study'}\r\n        }])\r\n    result_list = list(users)\r\n    output = []\r\n    for result in result_list:\r\n        fos = []\r\n        for FOS in result['Field_of_Study']:\r\n            fos.append(FOS['name'])\r\n        temp_dict = {\r\n            \"school_id\": result[\"school_id\"],\r\n            \"Field_of_Study\": fos\r\n        }\r\n        output.append(temp_dict)\r\n    return print(json.dumps(output))\r\n\r\n\r\ndef delete_user(school_id):\r\n    users = get_user_by_school_id(school_id)\r\n    if users.count() == 1:\r\n        users[0].delete()\r\n    else:\r\n        raise Exception(\"No user found\")\r\n\r\n\r\nif get_all_fields_of_study().count() == 0:\r\n    create_field_of_study(0, \"Algorithms and Theory of Computing\")\r\n    create_field_of_study(1, \"Data Science and Machine Learning\")\r\n    create_field_of_study(2, \"Database Systems\")\r\n    create_field_of_study(3, \"Extended Reality\")\r\n    create_field_of_study(4, \"Image Processing\")\r\n    create_field_of_study(5, \"Networking\")\r\n    create_field_of_study(6, \"Online Social Networks\")\r\n    create_field_of_study(7, \"Security and Cryptography\")\r\n    create_field_of_study(8, \"Artificial Intelligence\")\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/backend/database/database.py b/src/backend/database/database.py
--- a/src/backend/database/database.py	(revision 0573aa39510a17fdf06871a4dd7d424ab045f144)
+++ b/src/backend/database/database.py	(date 1680150882716)
@@ -17,6 +17,7 @@
     email = StringField(required=True)
     is_teacher = BooleanField(required=True, default=False)
     fields_id = ListField()
+    match_id = ListField()
 
 
 class FieldsOfStudy(Document):
@@ -54,11 +55,6 @@
     create_user(first_name, last_name, user_pass, school_id, email, True)
 
 
-# Remind front end team to not leave an option available to sign up as an administrator
-# def create_admin(first_name, last_name, user_pass, school_id, email, is_teacher):
-#     create_user(first_name, last_name, user_pass, school_id, email, is_teacher, True)
-
-
 def get_all_users():
     return User.objects()
 
@@ -131,14 +127,6 @@
         raise Exception("No unique user found")
 
 
-# def get_user_fields_of_study(school_id):
-#     q_set = User.objects(school_id=school_id)
-#     if q_set.count() == 1:
-#         temp_q = q_set.only('school_id', 'fields_id').exclude('id')
-#         return temp_q
-#     else:
-#         raise Exception("User not found")
-
 def get_user_fields_of_study(school_id):
     users = User.objects(school_id=school_id).aggregate(*[
         {
@@ -158,11 +146,6 @@
     }
     return print(json.dumps(temp_dict))
 
-#[{'_id': ObjectId('6416226b7ca58f762a323722'), 'first_name': 'Luke', 'last_name': 'Brown',
-# 'user_pass': '$2b$12$vawrnNJxkJI5UoJMVhS3LOmEYE57lFg6YKgdO7A0157tj08tcYy1i', 'school_id': '888319834',
-# 'email': 'lcbrown9@uncg.edu', 'is_teacher': False, 'fields_id': [0, 5],
-# 'Field_of_Study': [{'_id': 0, 'name': 'Algorithms and Theory of Computing'}, {'_id': 5, 'name': 'Networking'}]}]
-
 
 def get_teachers_fields_of_study():
     users = User.objects(is_teacher=True).aggregate(*[
@@ -184,7 +167,7 @@
             "Field_of_Study": fos
         }
         output.append(temp_dict)
-    return print(json.dumps(output))
+    return json.dumps(output)
 
 
 def delete_user(school_id):
@@ -195,6 +178,16 @@
         raise Exception("No user found")
 
 
+def update_match(s_school_id, t_school_id):
+    users = get_user_by_school_id(s_school_id)
+
+    if users.count() == 1:
+        users.update_one(set__match_id=t_school_id)
+    else:
+        raise Exception("No unique user found")
+
+
+
 if get_all_fields_of_study().count() == 0:
     create_field_of_study(0, "Algorithms and Theory of Computing")
     create_field_of_study(1, "Data Science and Machine Learning")
Index: src/backend/database/samples.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from database import*\r\n\r\n#creating a user\r\n#create_student(\"testID\", \"fds\", \"testpassword\",\"123456789\", \"j_luo3@uncg.edu\")\r\n# create_student(\"Luke\", \"Brown\", \"newpassword2\", \"888319834\", \"lcbrown9@uncg.edu\")\r\n#delete_user(\"888319834\")\r\n#Hard-coding administrator accounts\r\n# create_teacher(\"Stephen\", \"Tate\", \"tate123\", \"123456789\", \"srtate@uncg.edu\")\r\n# create_teacher(\"Chunjiang\", \"Zhu\", \"zhu123\", \"123456788\", \"chunjiang.zhu@uncg.edu\")\r\n# create_teacher(\"Lixin\", \"Fu\", \"fu123\", \"123456787\", \"lfu@uncg.edu\")\r\n# create_teacher(\"Minjeong\", \"Kim\", \"kim123\", \"123456786\", \"mkim@uncg.edu\")\r\n# create_teacher(\"Jing\", \"Deng\", \"deng123\", \"123456785\", \"jing.deng@uncg.edu\")\r\n# create_teacher(\"Regis\", \"Kopper\", \"kopper123\", \"123456784\", \"kopper@uncg.edu\")\r\n# create_teacher(\"Yingcheng\", \"Sun\", \"sun123\", \"123456783\", \"y_sun4@uncg.edu\")\r\n# create_teacher(\"Shan\", \"Suthaharan\", \"suthahran123\", \"123456782\", \"s_suthah@uncg.edu\")\r\n\r\n# grabbing all the users.\r\n# for user in get_all_users():\r\n#     print(user.to_json())\r\n\r\n# change_password(\"lcbrown9@uncg.edu\", \"newpassword2\")\r\n# compare_password(\"lcbrown9@uncg.edu\", \"newpassword3\")\r\n\r\n# Testing Fields\r\nget_teachers_fields_of_study()\r\n\r\n\r\n# Can add subscripts to grab similar first named users ex ('Name')[k]\r\n# print(persons.to_json())\r\n# print(persons.count())\r\n\r\n# How to grab ids from mongodb\r\n# person = get_user_by_first_name('Allen')[0]\r\n# print(str(person.id))
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/backend/database/samples.py b/src/backend/database/samples.py
--- a/src/backend/database/samples.py	(revision 0573aa39510a17fdf06871a4dd7d424ab045f144)
+++ b/src/backend/database/samples.py	(date 1680151025429)
@@ -1,8 +1,18 @@
 from database import*
 
 #creating a user
-#create_student("testID", "fds", "testpassword","123456789", "j_luo3@uncg.edu")
-# create_student("Luke", "Brown", "newpassword2", "888319834", "lcbrown9@uncg.edu")
+
+# create_student("Luke", "Brown", "newpassword", "888319834", "lcbrown9@uncg.edu")
+# update_user_fields_of_study("888319834", 0)
+# update_user_fields_of_study("888319834", 1)
+# update_user_fields_of_study("888319834", 2)
+
+# Testing update_match
+# update_match("888319834","123456783")
+
+test_list = ['123456789', '123456788']
+update_match('888319834', test_list)
+# print(get_teachers_fields_of_study())
 #delete_user("888319834")
 #Hard-coding administrator accounts
 # create_teacher("Stephen", "Tate", "tate123", "123456789", "srtate@uncg.edu")
@@ -19,10 +29,10 @@
 #     print(user.to_json())
 
 # change_password("lcbrown9@uncg.edu", "newpassword2")
-# compare_password("lcbrown9@uncg.edu", "newpassword3")
+# print(compare_password("j_luo3@uncg.edu", "testp2ssword"))
 
 # Testing Fields
-get_teachers_fields_of_study()
+# get_teachers_fields_of_study()
 
 
 # Can add subscripts to grab similar first named users ex ('Name')[k]
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.11\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 0573aa39510a17fdf06871a4dd7d424ab045f144)
+++ b/.idea/misc.xml	(date 1680031916980)
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9 (2)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/LinkScholar.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.11\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/LinkScholar.iml b/.idea/LinkScholar.iml
--- a/.idea/LinkScholar.iml	(revision 0573aa39510a17fdf06871a4dd7d424ab045f144)
+++ b/.idea/LinkScholar.iml	(date 1680032014801)
@@ -2,7 +2,7 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 3.11" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="Python 3.9 (2)" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e336abf8-a21a-4dbc-ab01-d9868aef47d5\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/LinkScholar.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/LinkScholar.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/backend/database/database.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/backend/database/database.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/backend/database/samples.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/backend/database/samples.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2LTTl1eg7lxKsMyQGQFkEecAaOG\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/lukeb/Documents/GitHub/LinkScholar&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;vcs.Git&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Python.samples\">\r\n    <configuration name=\"database\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"LinkScholar\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/src/backend/database\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/src/backend/database/database.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"samples\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"LinkScholar\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\Jacky\\AppData\\Local\\Programs\\Python\\Python311\\python.exe\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/src/backend/database\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/src/backend/database/samples.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.samples\" />\r\n        <item itemvalue=\"Python.database\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e336abf8-a21a-4dbc-ab01-d9868aef47d5\" name=\"Changes\" comment=\"\" />\r\n      <created>1675894221381</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1675894221381</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0573aa39510a17fdf06871a4dd7d424ab045f144)
+++ b/.idea/workspace.xml	(date 1680033508545)
@@ -64,8 +64,8 @@
       <envs>
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
-      <option name="SDK_HOME" value="C:\Users\Jacky\AppData\Local\Programs\Python\Python311\python.exe" />
-      <option name="SDK_NAME" value="Python 3.11" />
+      <option name="SDK_HOME" value="C:\Users\lukeb\anaconda3\python.exe" />
+      <option name="SDK_NAME" value="Python 3.9" />
       <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/backend/database" />
       <option name="IS_MODULE_SDK" value="false" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
@@ -79,6 +79,10 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
+    <list>
+      <item itemvalue="Python.database" />
+      <item itemvalue="Python.samples" />
+    </list>
     <recent_temporary>
       <list>
         <item itemvalue="Python.samples" />
